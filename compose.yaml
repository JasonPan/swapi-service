services:
  nats-box:
    image: natsio/nats-box:latest
    container_name: swapi-nats-box
    command: sh -c "while true; do sleep 2; done"

  nats:
    build:
      context: .
      dockerfile_inline: |
        FROM nats:2.9.22-alpine3.18
        RUN echo "max_payload: 16MB" >> /etc/nats/nats-server.conf
    depends_on:
      nats-box:
        condition: service_started
        restart: true
    image: swapi/nats
    container_name: swapi-nats-server
    restart: on-failure:3
    ports:
      - 4222:4222
      - 8222:8222
    profiles:
      - dependencies
      - services

  redis:
    image: redis:7.2.1-alpine
    container_name: swapi-redis-server
    restart: on-failure:3
    ports:
      - 6379:6379
    profiles:
      - dependencies
      - services

  redis-dashboard:
    image: redislabs/redisinsight:latest
    container_name: swapi-redis-dashboard
    ports:
      - 8001:8001
    volumes:
      - ./.tmp/data/redis-dashboard:/db
    depends_on:
      redis:
        condition: service_started

  postgres:
    image: postgres:16.0
    container_name: swapi-postgres-db
    restart: on-failure:3
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: example
      POSTGRES_DB: swapi_db
    command: -c ssl=on -c ssl_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem -c ssl_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
    ports:
      - 5432:5432
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -d swapi_db -U admin' ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./.tmp/data/postgres-data:/var/lib/postgresql/data
      - ./db/localdev/postgres/init-db:/docker-entrypoint-initdb.d
    profiles:
      - dependencies
      - services

  pgadmin:
    image: dpage/pgadmin4
    container_name: swapi-pgadmin
    user: root # required as postgres mounts volume as root
    restart: on-failure:3
    ports:
      - 8080:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=jasonpan@swapi.dev
      - PGADMIN_DEFAULT_PASSWORD=swapi
    volumes:
      - ./.tmp/data/pgadmin-data:/var/lib/pgadmin

  mongo:
    image: mongo
    container_name: swapi-mongo-db
    restart: on-failure:3
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    healthcheck:
      test: [ 'CMD-SHELL', 'echo ''db.runCommand("ping").ok'' | mongosh localhost:27017/test --quiet' ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./.tmp/data/mongo-data:/data/db
    profiles:
      - dependencies
      - services

  mongo-express:
    image: mongo-express
    container_name: swapi-mongo-express
    restart: on-failure:3
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
